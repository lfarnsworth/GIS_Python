# Midterm Tool Challenge
# In this assignment, you are instructed to produce a small script tool
# that takes advantage of arcpy and Python. You will need to provide example data,
# and the code should run on all PC's. The tool needs to manipulate a dataset across
# three different processes, for example, extracting, modifying and exporting data.
# The exact workflow is entirely up to yourself.
# You are expected to take 3-4 hours on this coding assignment,
# and you should deposit your code and example files within a Github repository for feedback and grading.
#

# The criteria are:
#
# Cleanliness of code (10 points)
# Functionality (10 points)
# Appropriate use of documentation (10 points)
# Depth of processing operation (10 points)
# In addition, you must provide example data and
# minimize the amount of editing a user must make in order for the program to run (10 points).

# This script uses three datasets: Coastal waters, Sewage Outflow, & Public Access Locations
# creates a 1 km buffer around al public access points that are within 500 feet of a sewage outflow site.
# This is useful for people attempting to avoid swimming near raw sewage
# We intend to output the intersections for each effected town
# Possible use for this would be a local newspaper, community website, or mobile app based on GPS

"""
Generated by ArcGIS ModelBuilder on : 2021-03-19 00:15:59
"""
import arcpy

def Model2():  # Model 2

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Model Environment settings
    with arcpy.EnvManager(scratchWorkspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Data\Midterm_Tool.gdb", workspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb"):
        RIPDES_Sanitary_Waste_Sites_3_ = "ModelBuilder\\RIPDES_Sanitary_Waste_Sites"
        Public_Shoreline_Access_2_ = "Public_Shoreline_Access"
        Coastal_Waters_2_ = "Coastal_Waters"

        # Process: Select Layer By Location (Select Layer By Location) (management)
        with arcpy.EnvManager(scratchWorkspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb", workspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb"):
            Selected_Access_Sites_Near_Outflow, Output_Layer_Names, Count = arcpy.management.SelectLayerByLocation(in_layer=[RIPDES_Sanitary_Waste_Sites_3_], overlap_type="INTERSECT", select_features=Public_Shoreline_Access_2_, search_distance="500 Feet", selection_type="NEW_SELECTION", invert_spatial_relationship="NOT_INVERT")

        # Process: Buffer (Buffer) (analysis)
        No_Swim_areas = r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb\No_Swim_areas"
        with arcpy.EnvManager(scratchWorkspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb", workspace=r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb"):
            arcpy.analysis.Buffer(in_features=Selected_Access_Sites_Near_Outflow, out_feature_class=No_Swim_areas, buffer_distance_or_field="1 Kilometers", line_side="FULL", line_end_type="ROUND", dissolve_option="NONE", dissolve_field=[], method="PLANAR")

        # Process: Clip (Clip) (analysis)
        NO_SWIM_Clip = r"C:\PYthon_Class\Midterm_Tool_for_Submission\Midterm_Tool.gdb\NO_SWIM"
        arcpy.analysis.Clip(in_features=No_Swim_areas, clip_features=Coastal_Waters_2_, out_feature_class=NO_SWIM_Clip, cluster_tolerance="")

if __name__ == '__main__':
    Model2()
